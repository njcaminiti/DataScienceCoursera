print(object.size(mtcars), units = "Mb")
print(object.size(UCBAdmissions), units = "Mb")
print(object.size(UCBAdmissions))
print(object.size(mtcars))
rm(df)
rm(xb)
restData$nearme = restData$zipCode %in% 21223
restData
table(restData$nearme)
restData$nearme$zipcode
restData$zipcode$nearme
restData$zipwrong = ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipwrong)
restData$zipgroups = cut(restData$zipCode)
unique(restData$zipCode)
len(unique(restData$zipCode))
length(unique(restData$zipCode))
restData$zipgroups = cut(restData$zipCode, breaks = 32)
restData$zipgroups
table(restData$zipgroups)
restData$zipgroups = cut(restData$zipCode, breaks = unique(restData$zipCode))
table(restData$zipgroups)
ftable(restData$zipgroups)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
restData$zipgroups = cut2(restData$zipCode, g=4)
restData$zipgroups
table(restData$zipgroups)
restData$zfc = factor(restData$zipCode)
table(restData$zfc)
table(restData$zipCode)
type(1)
class(1)
class(restData$zipCode)
class(restData$zfc)
summary(restData)
cars <- mtcars
mtcars$carname <- rownames(mtcars)
mtcars
?melt
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg", "hp"))
library(data.table)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg", "hp"))
carMelt
cylData <- dcast(carMelt, cyl ~ variable)
?dcast
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cyldata
cylData
insectSprays
InsectSprays
tapply(InsectSprays$count, InsectSprays$spray, sum)
summarize(dtcars)
summarize(dtcars, cyl)
summarize(dtcars, "cyl")
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
tbl_df(mtcars)
mtcars
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, 1:20)
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "US")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
summarize(cran3, avg_bytes = mean(size))
summarize_(cran avg_bytes = mean(size))
summarize_(cran, avg_bytes = mean(size))
summarize(cran,by avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
detach("package:Hmisc", unload=TRUE)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99(
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
submit()
students3
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
submit()
reset()
swirl()
?mutate
submit()
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class))
### Call to mutate() goes here %>%
print
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class))
print
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
url <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile= "./R/data/housing.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile= "./housing.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile= "./data/housing.csv")
getdir()
dir()
library(readr)
housing <- read_csv("~/Nicholas/Dev/R/data/housing.csv")
View(housing)
agricultureLogical <- select(housing, ACR == 3 & AGS ==6)
agricultureLogical <- select(housing, ACR == 3, AGS ==6)
agricultureLogical <- filter(housing, ACR == 3, AGS ==6)
which(agricultureLogical)
?which
agricultureLogical <- housing$ACR == 3 & housing$AGS ==6
which(agricultureLogical)
library(jpeg)
?jpeg
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "./data/jeff.jpg")
jpeg("jeff.jpg")
jpeg("./data/jeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "./data/jeff.jpg")
jpeg("./data/jeff.jpg", native = TRUE)
?jpeg
jeff <- jpeg("./data/jeff.jpg")
jeff
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "./data/jeff.jpg")
?readjpeg
?readJPEG
jeff <- readJPEG("./data/jeff.jpg", native = TRUE)
jeff
quantile(jeff, probs = 0.3)
quantile(jeff, probs = 0.80)
?quantile
quantile(jeff, probs = c(.30, .80))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "./data/jeff.jpg", mode = "wb")
jeff <- readJPEG("./data/jeff.jpg", native = TRUE)
quantile(jeff, probs = c(.30, .80))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile= "./data/GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile= "./data/EDSTAT.csv")
GDP <- read.csv("./data/GDP.csv")
EDSTAT <- read.csv("./data/EDSTAT.csv")
summary(GDP)
?data.table
EDSTAT <- data.table(EDSTAT)
class(EDSTAT)
GDP <- data.table(GDP)
EDSTAT
head(EDSTAT)
summary(EDSTAT)
summary(GDP)
fread(EDSTAT)
head(GDP)
read.csv(EDSTAT)
View(EDSTAT)
View(GDP)
names(EDSTAT)
names(GDP)
?merge
table <- merge(EDSTAT, GDP, by.x = "CountryCode", by.y = "X")
table
names(table)
View(table)
arrange(table, desc(X3))
arrange(table, desc(X.3))
table_sorted <- arrange(table, desc(X.3))
View(table_sorted)
table_sorted <- arrange(table, desc(Gross.domestic.product.2012))
table <- merge(EDSTAT, GDP, by.x = "CountryCode", by.y = "X", all = FALSE)
table <- merge(EDSTAT, GDP, by.x = "CountryCode", by.y = "X", all = FALSE)
table_sorted <- arrange(table, desc(Gross.domestic.product.2012))
View(table_sorted)
table_sorted$Gross.domestic.product.2012
View(table)
mutate(table, ranking = as.numeric(Gross.domestic.product.2012))
table_sorted <- arrange(table, desc(ranking))
table <- mutate(table, ranking = as.numeric(Gross.domestic.product.2012))
table_sorted <- arrange(table, desc(ranking))
View(table_sorted)
table <- mutate(table, ranking = as.numeric(as.string(Gross.domestic.product.2012)))
table <- mutate(table, ranking = as.numeric(as.character(Gross.domestic.product.2012)))
table_sorted <- arrange(table, desc(ranking))
View(table_sorted)
OECD <- filter(table_sorted, Income.Group = "High income: OECD")
OECD <- filter(table_sorted, Income.Group == "High income: OECD")
nonOECD <- filter(table_sorted, Income.Group == "High income: nonOECD")
mean(OECD$ranking)
mean(nonOECD$ranking)
mean(nonOECD$ranking, na.rm=TRUE)
quantile(table_sorted$ranking)
quantile(table_sorted$ranking, na.rm=TRUE)
?cut
cuttable <- mutate(table_sorted, quant=quantile(ranking))
cuttable <- mutate(table_sorted, quant=quantile(ranking), na.rm=TRUE)
cuttable <- mutate(table_sorted, quant=quantile(ranking, na.rm=TRUE))
cuttable <- mutate(table_sorted, quant= cut(ranking, 5))
cuttable$quant
table(cuttable, ~income.group)
table(cuttable, .~income.group)
table(cuttable, quant.~income.group)
table(cuttable, quant~income.group)
cuttable(quant~income.group)
xtabs(quant ~ income.group, data=cuttable)
xtabs(quant ~ Income.Group, data=cuttable)
?summarize
grouped <- group_by(cuttable, quant)
summarize(grouped, Income.Group)
summarize(grouped)
grouped
summarize(grouped)
summarize(grouped, n(Income.Group))
summarize(grouped, n())
summarize(grouped, group = Income.Group)
grouped <- group_by(cuttable, quant, Income.Group)
summarize(grouped)
summarize(grouped, n())
date()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:33:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 11, minutes = 57)
this_moment
nyc <- now(America/New_York)
nyc <- now(Sys.time(), America/New_York)
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./data/housing.csv")
housing <- read.csv("./data/housing.csv")
as.table(housing)
head(housing)
data.table(housing)
class(housing)
housing <- data.table(housing)
class(housing)
?strsplit
strsplit(housing, "wgtp")
?strsplit
strsplit(names(housing), "wgtp")
strsplit(names(housing), "wgtp")[123]
GDP<- read.csv("./data/GDP.csv")
GDP <- data.table(GDP)
names(GDP)
View(GDP)
class(GDP$X.3)
class(GDP$X.1)
class(GDP$X.2)
class(GDP$X.4)
class(GDP$X)
mutate(GDP, X.3 = as.numeric(as.character(X.3))
mutate(GDP, X.3 = as.numeric(as.character(X.3)))
View(GDP)
mutate(GDP, X.3 = (as.character(X.3)))
mutate(GDP, X.3 = (as.numeric(X.3)))
View(GDP)
GDPNUM <- GDP %>%
mutate(X.3 = as.character(X.3)) %>%
mutate(X.3 = as.numeric(X.3))
class(GDPNUM$X.3)
?as.numeric
View(GDPNUM)
?colsub
?gsub
rm(GDPNUM)
GDP %>%
mutate(X.3 = as.character(X.3)) %>%
gsub(",", "", X.3) %>%
mutate(X.3 = as.numeric(X.3))
GDP %>%
+ mutate(X.3 = as.character(X.3)) %>%
+ gsub(",", "", GDP$X.3) %>%
+ mutate(X.3 = as.numeric(X.3))
GDP %>%
+ mutate(X.3 = as.character(X.3)) %>%
+ gsub(",", "", GDP$X.3) %>%
+ mutate(GDP$X.3 = as.numeric(X.3))
GDP %>%
+ mutate(X.3 = as.character(X.3)) %>%
+ gsub(",", "", GDP$X.3) %>%
+ mutate(GDP$X.3, as.numeric())
GDP %>%
+ mutate(X.3 = as.character(X.3)) %>%
+ gsub(",", "", GDP$X.3)
View(GDP)
GDP %>%
+ mutate(X.3 = as.character(X.3))
GDPCHAR <- mutate(GDP$X.3, as.character(GDP$X.3))
GDPCHAR <- GDP %>%
+ mutate(X.3 = as.character(X.3))
View(GDP)
names(GDP)
GDP$X.3
library(dplyr)
?replace
?mutate
GDPCHAR <- mutate(GDP, X.3 = as.character(GDP$X.3))
class(GDPCHAR$X.3)
GDPCHARCOMMALESS <- mutate(GDPCHAR, X.3 = gsub(",", "", GDP$X.3))
GDPCHARCOMMALESS$X.3[20]
GDPNUM <- mutate(GDPCOMMALESS, X.3 = as.numeric(X.3))
GDPNUM <- mutate(GDPCHARCOMMALESS, X.3 = as.numeric(X.3))
mean(GDPNUM$X.3)
mean(GDPNUM$X.3, na.rm=T)
View(GDPNUM)
nonNAGDP<- filter(GDPNUM, !is.na(X.3))
GDPNUM[1,2]
GDPNUM[1,7]
GDPNUM[1,9]
GDPNUM[1,4]
GDPNUM[1,5]
GDPNUM[1,1]
GDPNUM[2,1]
GDPNUM[3,1]
GDPNUM[6,1]
Countries <- GDPNUM[5:194,]
nonNAGDP<- filter(Countries, !is.na(X.3))
mean(nonNAGDP$X.3)
View(Countries)
rm(Countries)
rm(GDPCHAR, GDPCHARCOMMALESS, GDPNUM)
rm(nonNAGDP, housing)
ED <- read.csv("./data/EDSTAT.csv")
ED <- data.table(ED)
class(ED)
class(GDP)
View(ED)
GDPED <- merge(ED, GDP, by.x = "CountryCode", by.y = "X")
View(GDPED)
Special <- filter(GDPED, Special.Notes != "")
View(Special)
?contains
?grep
Fiscal <- filter(Special, grepl("^Fiscal year", Special.Notes))
View(Fiscal)
June <- filter(Fiscal, grepl("June", Special.Notes))
View(June)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(lubridate)
View(sampleTimes_
View(sampleTimes)
?lubridate
hm("5:24")
class(hm("5:24"))
class(ymd("2011-12-14"))
sampleTimes[1]
sampleTimes[2]
?sapply
n(year(sampleTimes) == 2012)
n((year(sampleTimes)) == 2012)
year(sampleTimes[1])
year(sampleTimes[1]) == 2012
year(sampleTimes) == 2012
n(year(sampleTimes) == 2012)
is.true(year(sampleTimes) == 2012)
?n
?count
count(year(sampleTimes) == 2012)
library("dplyr", lib.loc="~/R/win-library/3.2")
detach("package:dplyr", unload=TRUE)
n(year(sampleTimes) == 2012)
count(year(sampleTimes) == 2012)
library("dplyr", lib.loc="~/R/win-library/3.2")
length(year(sampleTimes) == 2012)
sum(year(sampleTimes) == 2012)
sum(year(sampleTimes) == 2012 & wday(sampleTimes) == 3)
sum(wday(sampleTimes) == 3)
sum(year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
library("git2r", lib.loc="~/R/win-library/3.2")
add("https://github.com/njcaminiti/DataScienceCoursera.git", "CleaningData.R")
library(git2r)
add("https://github.com/njcaminiti/DataScienceCoursera.git", "CleaningData.R")
?add
setwd("~/Nicholas/Dev/R/DataScienceCoursera/Getting and Cleaning Data")
setwd("~/Nicholas/Dev/R/DataScienceCoursera")
